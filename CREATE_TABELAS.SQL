IF NOT EXISTS (SELECT NAME FROM MASTER.SYS.DATABASES WHERE NAME = 'BARBEARIA')
BEGIN
	CREATE DATABASE BARBEARIA
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'PERMISSAO')
BEGIN
	CREATE TABLE PERMISSAO(
		ID BIGINT IDENTITY(1,1) PRIMARY KEY,
		NOME VARCHAR(100)
	);
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'FUNCIONARIO')
BEGIN
	CREATE TABLE FUNCIONARIO(
		ID BIGINT IDENTITY(1,1) PRIMARY KEY,
		NOME VARCHAR(50),
		CARGO VARCHAR(50),
		PORCENTAGEM INTEGER
	);
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'SERVICO')
BEGIN
	CREATE TABLE SERVICO(
		ID BIGINT IDENTITY(1,1) PRIMARY KEY,
		NOME VARCHAR(50),
		VALOR FLOAT
	);
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'USUARIO')
BEGIN
	CREATE TABLE USUARIO(
		ID BIGINT IDENTITY(1,1) PRIMARY KEY,
		NOME VARCHAR(100),
		LOGIN VARCHAR(50),
		SENHA VARCHAR(100),
		ATIVO INT,
		PERMISSAO BIGINT,
		FUNCIONARIO BIGINT
	);
	
	ALTER TABLE USUARIO ADD CONSTRAINT FK_PERMISSAO FOREIGN KEY(PERMISSAO) REFERENCES PERMISSAO(ID)
	ALTER TABLE USUARIO ADD CONSTRAINT FK_FUNCIONARIOID FOREIGN KEY(FUNCIONARIO) REFERENCES FUNCIONARIO(ID)
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ATENDIMENTO')
BEGIN
	CREATE TABLE ATENDIMENTO(
		ID BIGINT IDENTITY(1,1) PRIMARY KEY,
		DATAHORARIO VARCHAR(100),
		FUNCIONARIO BIGINT,
		USUARIO BIGINT,
		PAGAMENTO INT,
		VALOR FLOAT,
		STATUS INT
	);

	ALTER TABLE ATENDIMENTO ADD CONSTRAINT FK_FUNCIONARIO FOREIGN KEY(FUNCIONARIO) REFERENCES FUNCIONARIO(ID)
	ALTER TABLE ATENDIMENTO ADD CONSTRAINT FK_USUARIO FOREIGN KEY(USUARIO) REFERENCES USUARIO(ID)
END

IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'ATENDIMENTO_SERVICO')
	BEGIN
	CREATE TABLE ATENDIMENTO_SERVICO(
		IDATENDIMENTO BIGINT,
		IDSERVICO BIGINT
	);

	ALTER TABLE ATENDIMENTO_SERVICO ADD CONSTRAINT FK_ATENDIMENTO FOREIGN KEY (IDATENDIMENTO) REFERENCES ATENDIMENTO(ID)
	ALTER TABLE ATENDIMENTO_SERVICO ADD CONSTRAINT FK_SERVICO FOREIGN KEY (IDSERVICO) REFERENCES SERVICO(ID)
END

INSERT INTO PERMISSAO(NOME) VALUES('ROLE_TOTAL');
INSERT INTO PERMISSAO(NOME) VALUES('ROLE_FUNCIONARIO');
INSERT INTO PERMISSAO(NOME) VALUES('ROLE_CLIENTE');
INSERT INTO USUARIO(NOME,LOGIN,SENHA,ATIVO,PERMISSAO) VALUES('ADMIN','ADMIN','$2a$10$R2fNIDW1DB/wULohtHImquLezDpaFyytU20eCDhpKROHXICo3h2RG',1, 1);
